#!/usr/bin/env python3

########################################################################
# generateTask.py for VHDL task {{ task_name }}
# Generates random tasks, generates TaskParameters, fill
# entity and description templates
#
# Copyright (C) ADD HERE: year, author, email
# License GPL V2 or later (see http://www.gnu.org/licenses/gpl2.txt)
########################################################################

import string
import sys

from jinja2 import FileSystemLoader, Environment

import json

#################################################################

user_id=sys.argv[1]
task_nr=sys.argv[2]
submission_email=sys.argv[3]
language=sys.argv[4]

params_desc={}

#####################
#  TASK GENERATION  #
#####################
# ADD HERE: generation of parameters of task variant

##############################
#  PARAMETER SPECIFYING TASK #
##############################
# SPECIFY HERE: task_parameters
# must uniquely specifying a task variant,
# will be saved in database and given to tester
task_parameters =

###########################################
# SET PARAMETERS FOR DESCRIPTION TEMPLATE #
###########################################
params_desc.update({"TASKNR":str(task_nr), "SUBMISSIONEMAIL":submission_email})

# ADD HERE: attach additional parameters to params_desc for task description template

#############################
# FILL DESCRIPTION TEMPLATE #
#############################
env = Environment(trim_blocks = True, lstrip_blocks = True)
env.loader = FileSystemLoader('templates/')
filename ="task_description/task_description_template_{0}.tex".format(language)
template = env.get_template(filename)
template = template.render(params_desc)

filename ="tmp/desc_{0}_Task{1}.tex".format(user_id,task_nr)
with open (filename, "w") as output_file:
    output_file.write(template)

################################################
# SET & FILL PARAMETERS FOR ENTITY TEMPLATES   #
################################################
# ADD HERE: Generation of usertask specific entity files

# NOTE: place generated files as tmp/<entityname>_<userId>_Task<taskNr>.vhdl
# so that the autogenerated generator.sh can use them (e.g tmp/pwm_5_Task1.vhdl)

###########################
#   PRINT TASKPARAMETERS  #
###########################
print(task_parameters)
